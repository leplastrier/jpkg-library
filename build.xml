<?xml version="1.0" standalone="yes"?>
<project name="jpkg" default="dist" basedir=".">
    <!-- Build directory -->
    <property name="deploy.dir" value="dist"/>
    <property name="lib.dir" value="lib"/>
    <property name="src.dir" value="src/java"/>

    <!-- JavaDoc Output -->
    <property name="javadoc.dir" value="${deploy.dir}/javadoc"/>

    <!-- Compilation Classpath -->
    <path id="classpath">
      <pathelement location="${deploy.dir}/classes"/>
      <fileset dir="${deploy.dir}/lib" includes="*.jar"/>
    </path>

    <!-- Cleanup -->
    <target name="clean">
      <delete dir="${deploy.dir}/classes"/>
    </target>

    <!-- Full cleanup -->
    <target name="distclean">
      <delete dir="${deploy.dir}"/>
    </target>

    <!-- Prepare output directories -->
    <target name="prepare">
        <mkdir dir="${deploy.dir}"/>
        <mkdir dir="${deploy.dir}/lib"/>
        <mkdir dir="${deploy.dir}/classes"/>
        <mkdir dir="${deploy.dir}/test-classes"/>
        
        <copy todir="${deploy.dir}/lib">
          <fileset dir="${lib.dir}" includes="*.jar"/>
        </copy>
    </target>

    <!-- Compile Java Sources -->
    <target name="compile" depends="prepare">
        <depend srcdir="${src.dir}" destdir="${deploy.dir}/classes" cache="${deploy.dir}/depcache"/>
        <javac srcdir="${src.dir}" destdir="${deploy.dir}/classes" debug="on" deprecation="on" source="1.5" target="1.5" includeAntRuntime="false">
            <classpath refid="classpath"/>
            <compilerarg value="-Xlint"/>
            <compilerarg value="-Xlint:-serial"/>
        </javac>
    </target>

    <!-- Build the distribution jars -->
    <target name="dist" depends="compile,test,javadoc">
      <!-- jar up the jpkg library -->
      <jar file="${deploy.dir}/jpkg-lib.jar">
          <fileset dir="${deploy.dir}/classes">
              <exclude name="com/threerings/jpkg/ant/**"/>
              <exclude name="com/threerings/antidote/**"/>
          </fileset>
      </jar>
      <!-- jar up the antidote library -->
      <jar file="${deploy.dir}/antidote.jar">
          <fileset dir="${deploy.dir}/classes" includes="com/threerings/antidote/**"/>
      </jar>
      <!-- jar up the jpkg ant tasks -->
      <jar file="${deploy.dir}/jpkg-ant.jar">
          <fileset dir="${deploy.dir}/classes" includes="com/threerings/jpkg/ant/**"/>
          <fileset dir="etc" includes="antlib.xml"/>
          <fileset dir="etc" includes="**/*.vm"/>
      </jar>
      <!-- jar up the jpkg ant tasks and library with all dependencies -->
      <jar file="${deploy.dir}/jpkg-combined.jar">
          <zipfileset src="${deploy.dir}/antidote.jar"/>
          <zipfileset src="${deploy.dir}/jpkg-lib.jar"/>
          <zipfileset src="${deploy.dir}/jpkg-ant.jar"/>

          <!-- dependencies for both the library and ant tasks -->
          <!-- exclude the signatures from the mail jar -->
          <zipfileset src="lib/mail-1.4.1.jar" excludes="META-INF/SUN_MICR*"/>
          <zipfileset src="lib/commons-io-1.3.2.jar"/>
          <!-- dependencies for the library -->
          <zipfileset src="lib/commons-codec-1.3.jar"/>
          <!-- dependencies for the ant tasks [collections for velocity] -->
          <zipfileset src="lib/commons-collections-3.2.jar"/>
          <zipfileset src="lib/velocity-1.5-dev.jar"/>
      </jar>
      <!-- zip up all the binaries -->
      <zip destfile="${deploy.dir}/jpkg-bin.zip">
          <fileset dir="${deploy.dir}">
              <include name="jpkg-lib.jar"/>
              <include name="antidote.jar"/>
              <include name="jpkg-ant.jar"/>
              <include name="jpkg-combined.jar"/>
          </fileset>
      </zip>
      <!-- zip up all the source and documentation -->
      <zip destfile="${deploy.dir}/jpkg-src.zip">
          <fileset dir=".">
              <include name="README"/>
              <include name="LICENSE"/>
              <include name="ANT_SCHEMA"/>
              <include name="build.xml"/>
              <include name="bin/**"/>
              <include name="etc/**"/>
              <include name="lib/**"/>
              <include name="src/**"/>
          </fileset>
          <fileset dir="${deploy.dir}" includes="javadoc/**"/>
      </zip>
    </target>

    <!-- Build docs -->
    <target name="javadoc" depends="prepare">
        <javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}"
                 windowtitle="Jpkg API" doctitle="Jpkg API" overview="${src.dir}/overview.html"
                 Package="true" linksource="true">
            <classpath refid="classpath"/>
            
            <link href="http://java.sun.com/j2se/1.5/docs/api"/>
            <link href="http://java.sun.com/products/javamail/javadocs"/>
            <link href="http://velocity.apache.org/engine/releases/velocity-1.5/apidocs"/>
            <link href="http://commons.apache.org/io/api-1.4"/>
            <link href="http://commons.apache.org/codec/api-1.3"/>
            <link href="http://commons.apache.org/collections/api-3.2"/>
            <link href="http://jpkg-library.googlecode.com/svn/javadocs/ant-1.7"/>

          <bottom>Copyright &#169; 2007-2008  Three Rings Design, Inc.
                  All Rights Reserved. Released under a BSD license.</bottom>
        </javadoc>
    </target>

    <!-- Compile & Run Java Unit Tests -->
    <target name="test" depends="compile, prepare">
        <mkdir dir="${basedir}/${deploy.dir}/tmp"/>
        <depend srcdir="src/tests" destdir="${deploy.dir}/test-classes" cache="${deploy.dir}/test-depcache"/>
        <javac srcdir="src/tests" destdir="${deploy.dir}/test-classes" debug="on" deprecation="on" source="1.5" target="1.5" includeAntRuntime="false">
            <classpath refid="classpath"/>
            <compilerarg value="-Xlint"/>
            <compilerarg value="-Xlint:-serial"/>
        </javac>

        <!-- Copy the velocity test templates -->
        <copy todir="${deploy.dir}/test-classes">
          <fileset dir="etc" includes="*.vm"/>
          <fileset dir="src/tests/data/velocity" includes="*.vm"/>
        </copy>
        
        <!-- Run tests -->
        <junit fork="yes" forkmode="once" failureproperty="test.failure">
            <!-- include the tests in our class path -->
            <classpath>
                <pathelement location="${deploy.dir}/test-classes"/>
            	<path refid="classpath"/>
            </classpath>

            <!-- human output -->
            <formatter type="brief" usefile="false" unless="use.xml.output"/>
            <formatter type="xml" usefile="true" if="use.xml.output"/>

            <!-- batch run our tests -->
            <batchtest unless="test" todir="${basedir}/${deploy.dir}/tmp">
                <fileset dir="src/tests">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>

            <!-- run the requested test -->
            <test name="${test}" if="test"/>
        </junit>
        
        <fail if="test.failure" message="Unit tests failed"/>
    </target>

    <!-- Quick <dpkg> test target. -->
    <target name="test_dpkg" depends="compile">
      <path id="task-classpath">
        <pathelement location="${deploy.dir}/classes"/>
        <fileset dir="${deploy.dir}/lib" includes="*.jar"/>
        <pathelement location="etc/"/>
      </path>

      <taskdef resource="antlib.xml">
          <classpath refid="task-classpath"/>
      </taskdef>
      <mkdir dir="${deploy.dir}/dpkg_out"/>
      <dpkg output="${deploy.dir}/dpkg_out" prefix="/usr/local/" distribution="unstable">
        <package destroot="src/tests/data/package_destroot/" filename="testpkg.dpkg">
          <info>
	      <name>packagename</name>
	      <version epoch="1" debianVersion="3a">1.2</version>
              <arch>i386</arch>
              <!--
              <description>Package description</description>
              -->
              <description>
                  <summary>Package Description</summary>
                  <blank/>
                  <paragraph>This is a paragraph line</paragraph>
                  <verbatim>This is a verbatim line</verbatim>
              </description>
              <maintainer>
                  <name>Package Maintainer</name>
                  <email>maintainer@package.com</email>
              </maintainer>
              <priority>optional</priority>
              <section>misc</section>
          </info>
          <permissions>
              <permission user="user" group="group" mode="644" recursive="true">
                  <path>/directory</path>
              </permission> 
              <permission userId="100" groupId="100" mode="755" recursive="false">
                  <path>data/</path>
              </permission> 
              <permission mode="755">
                  <path>bin/script.sh</path>
              </permission> 
          </permissions>
          <dependencies>
            <require package="packagename">
                <equalTo>1.4</equalTo>
            </require>
            <conflict package="conflictswith"/>
            <replacement package="replacethis"/>
            <alternatives>
                <require package="option1">
                    <equalOrLesserThan>12.1a</equalOrLesserThan>
                </require>
                <require package="option2"/>
            </alternatives>
          </dependencies>
          <scripts>
              <helloworld world="Earth"/>
              <preinst command="echo test preinst message"/>
              <preinst command="false" failonerror="false"/>
              <postinst source="src/tests/data/postinst.sh"/>
              <prerm command="echo test prerm message"/>
              <postrm command="echo test postrm message"/>
          </scripts>
        </package>
      </dpkg>
    </target>
</project>
